/* Container for all traffic lights */
.traffic-lights-wrapper {
    display: flex;
    flex-wrap: wrap; /* Allow wrapping for multiple lights */
    justify-content: center;
    gap: 10px; /* Space between each traffic light */
    margin-bottom: 10px; /* Space between lights and button */
    margin-top: 10px;
}

/* Traffic Light Container */
.traffic-light-container {
    flex = 1;
    display: flex;
    flex-direction: column;
    align-items: center;
    background-color: #333; /* Dark casing */
    padding: 5px;
    border-radius: 12px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
    border: 2px solid #555;
    width: 60px; /* Fixed width for the minimalistic design */
}

/* Individual Light Bulb Wrapper */
.traffic-light-bulb {
    position: relative; /* Needed for absolute positioning of pseudo-elements */
    width: 40px;
    height: 40px;
    margin: 10px 0;
    border-radius: 50%;
    background-color: #1a1a1a; /* Off state casing color */
    border: 3px solid #000;
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: visible; /* Allow pseudo-element to extend outside */
}

/* Hide the default checkbox */
.traffic-light-bulb input[type="checkbox"] {
    display: none;
}

/* The label acts as the clickable area, covering the entire bulb */
.traffic-light-label {
    position: absolute;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    cursor: pointer;
    z-index: 10; /* Ensure label is clickable over other elements */
}

/* Inner Light Effect - Static Colors */
.traffic-light-bulb-inner {
    width: 30px; /* Slightly smaller than bulb for border effect */
    height: 30px;
    border-radius: 50%;
    box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.5); /* Subtle inner shadow for depth */
    transition: background-color 0.3s ease, box-shadow 0.3s ease;
    z-index: 5; /* Ensure the light itself is visible */
    pointer-events: none; /* Allow clicks to pass through to the label */
}

/* Specific colors for each light */
.traffic-light-bulb.red.litup .traffic-light-bulb-inner {
    background-color: #ef4444; /* Tailwind red-500 */
    box-shadow: 0 0 15px #ef4444, 0 0 30px #ef4444, inset 0 0 10px rgba(255, 255, 255, 0.5);
}

.traffic-light-bulb.yellow.litup .traffic-light-bulb-inner {
    background-color: #f59e0b; /* Tailwind amber-500 */
    box-shadow: 0 0 15px #f59e0b, 0 0 30px #f59e0b, inset 0 0 10px rgba(255, 255, 255, 0.5);
}

.traffic-light-bulb.green.litup .traffic-light-bulb-inner {
    background-color: #22c55e; /* Tailwind green-500 */
    box-shadow: 0 0 15px #22c55e, 0 0 30px #22c55e, inset 0 0 10px rgba(255, 255, 255, 0.5);
}

/* Circle around the light when the 'has-circle' class is present */
.traffic-light-bulb.has-circle::after {
    content: '';
    position: absolute;
    width: 45px; /* Slightly larger than the bulb to create a visible circle around it */
    height: 45px;
    border: 3px solid #60a5fa; /* Tailwind blue-400 for the circle color */
    border-radius: 50%;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    box-sizing: border-box; /* Include padding/border in the element's total width and height */
    pointer-events: none; /* Allow clicks to pass through to the elements beneath */
    transition: border-color 0.3s ease, box-shadow 0.3s ease;
    box-shadow: 0 0 10px #60a5fa; /* A subtle glow for the circle */
    z-index: 1; /* Position above the casing but below the light/label */
}

/* Submit Button Styling */
.submit-btn {
    padding: 12px 24px;
    font-size: 1.1rem;
    font-weight: 600;
    background-color: #3b82f6; /* Tailwind blue-500 */
    color: white;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    transition: background-color 0.3s ease, box-shadow 0.3s ease;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
    text-shadow: 1px 1px 2px rgba(0,0,0,0.2);
}

.submit-btn:hover {
    background-color: #2563eb; /* Tailwind blue-600 */
    box-shadow: 0 6px 15px rgba(0, 0, 0, 0.3);
}

.submit-btn:active {
    background-color: #1d4ed8; /* Tailwind blue-700 */
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
    transform: translateY(1px);
}